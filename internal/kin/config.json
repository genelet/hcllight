{
		"openapi": "3.0.3",
		"info": {
			"version": "1.0.0",
			"title": "OpenAPI for Vault Database Configuration",
			"description": "HTTP API that gives you full access to Config and Authentication. All API routes are prefixed with /v1",
			"license": {
				"name": "MIT"
			}
		},
		"servers": [
			{
				"url": "/v1",
				"description": "Database Authentication and Configuration"
			}
		],
		"paths": {
			"/auth/graphauth/login": {
				"x-vault-unauthenticated": true,
				"post": {
					"summary": "Login to the system",
					"operationId": "graphauth-login",
					"tags": [
						"authentication"
					],
					"requestBody": {
						"required": true,
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Login"
								}
							}
						}
					},
					"responses": {
						"200": {
							"description": "Expected response to a valid request",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ConfigReport"
									}
								}
							}
						},
						"403": {
							"description": "User is not authorized"
						},
						"default": {
							"description": "unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/Error"
									}
								}
							}
						}
					}
				}
			},
			"/auth/graphauth/config": {
				"get": {
					"summary": "Report current server config",
					"operationId": "readAuthConfig",
					"security": [
						{"vaultToken": []}
					],
					"responses": {
						"200": {
							"description": "Expected response to a valid request",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ConfigReport"
									}
								}
							}
						},
						"default": {
							"description": "unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/Error"
									}
								}
							}
						}
					}
				}
			},
			"/graph/config/generate": {
				"post": {
					"summary": "Generate No-Code Server Programs in HCL",
					"operationId": "serverGenesis",
					"security": [
						{"vaultToken": []}
					],
					"requestBody": {
						"required": true,
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ConfigRequest"
								}
							}
						}
					},
					"responses": {
						"200": {
							"description": "Expected response to a valid request",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ConfigReport"
									}
								}
							}
						},
						"default": {
							"description": "unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/Error"
									}
								}
							}
						}
					}
				}
			},
			"/graph/config": {
				"get": {
					"summary": "Report current graph server config",
					"operationId": "readGraphConfig",
					"security": [
						{"vaultToken": []}
					],
					"responses": {
						"200": {
							"description": "Expected response to a valid request",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ConfigReport"
									}
								}
							}
						},
						"default": {
							"description": "unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/Error"
									}
								}
							}
						}
					}
				},
				"post": {
					"summary": "Upload local config to graph server",
					"operationId": "createGraphConfig",
					"security": [
						{"vaultToken": []}
					],
					"requestBody": {
						"required": true,
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ConfigRequest"
								}
							}
						}
					},
					"responses": {
						"200": {
							"description": "Expected response to a valid request",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ConfigReport"
									}
								}
							}
						},
						"default": {
							"description": "unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/Error"
									}
								}
							}
						}
					}
				}
			}
		},
		"components": {
			"schemas": {
				"Login": {
					"required": [
						"team",
						"username",
						"password"
					],
					"properties": {
						"team": {
							"type": "string"
						},
						"username": {
							"type": "string"
						},
						"password": {
							"type": "string"
						}
					}
				},
				"MFARequirement": {
					"type": "object",
					"properties": {
						"mfa_request_id": {
							"type": "string"
						},
						"mfa_constraints": {
							"type": "object",
							"additionalProperties": true
						}
					}
				},
				"Auth": {
					"type": "object",
					"properties": {
						"client_token": {
							"type": "string"
						},
						"accessor": {
							"type": "string"
						},
						"policies": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"token_policies": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"identity_policies": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"metadata": {
							"type": "object",
							"additionalProperties": {
								"type": "string"
							}
						},
						"lease_duration": {
							"type": "integer"
						},
						"renewable": {
							"type": "boolean"
						},
						"entity_id": {
							"type": "string"
						},
						"token_type": {
							"type": "string"
						},
						"orphan": {
							"type": "boolean"
						},
						"mfa_requirement": {
							"$ref": "#/components/schemas/MFARequirement"
						},
						"num_uses": {
							"type": "integer"
						}
					}
				},
				"WrapInfo": {
					"type": "object",
					"properties": {
						"token": {
							"type": "string"
						},
						"accessor": {
							"type": "string"
						},	
						"ttl": {
							"type": "integer"
						},
						"creation_time": {
							"type": "string"
						},
						"creation_path": {
							"type": "string"
						},
						"wrapped_accessor": {
							"type": "string"
						}
					}
				},
				"ConfigReport": {
					"type": "object",
					"properties": {
						"auth": {
							"$ref": "#/components/schemas/Auth"
						},
						"request_id": {
							"type": "string",
							"description": "Name to associate with this request"
						},
						"lease_id": {
							"type": "string",
							"description": "Name of the entity alias to associate with this token"
						},
						"renewable": {
							"type": "boolean"
						},
						"lease_duration": {
							"type": "integer"
						},
						"data": {
							"type": "object",
							"additionalProperties": true
						},
						"wrap_info": {
							"$ref": "#/components/schemas/WrapInfo"		
						},
						"warnings": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"mount_type": {
							"type": "string"
						}  
					}
				},
				"ConfigRequest": {
					"type": "object",
					"required": [
						"dbconfig",
						"teams"
					],
					"properties": {
						"dbconfig": {
							"$ref": "#/components/schemas/DBConfig"
						},
						"parameters": {
							"$ref": "#/components/schemas/Parameters"
						},
						"teams": {
							"type": "object",
							"additionalProperties": {
								"$ref": "#/components/schemas/Team"
							}
						}
					}
				},
				"DBConfig": {
					"type": "object",
					"properties": {
						"database": {
							"type": "string"
						},
						"dbdriver": {
							"type": "integer"
						},
						"dbvars": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				},
				"Parameters": {
					"type": "object",
					"properties": {
						"path_auth_config": {
							"type": "string"
						},
						"vault_addr": {
							"type": "string"
						},
						"vault_token": {
							"type": "string"
						}
					}
				},
				"DBTeam": {
					"type": "object",
					"properties": {
						"call_name": {
							"type": "string"
						},
						"output": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				},
				"Team": {
					"type": "object",
					"properties": {
						"team_name": {
							"type": "string"
						},
						"meta": {
							"type": "object",
							"properties": {
								"Policies": {
									"type": "array",
									"items": {
										"type": "string"
									}    
								}
							}
						},
						"dbteam": {
							"$ref": "#/components/schemas/DBTeam"
						}
					}
				},
				"Error": {
					"required": [
						"code",
						"message"
					],
					"properties": {
						"code": {
							"type": "integer",
							"format": "int32"
						},
						"message": {
							"type": "string"
						}
					}
				}
			},
			"securitySchemes": {
				"vaultToken": {
					"type": "apiKey",
					"in": "header",
					"name": "X-VAULT-TOKEN"
				}
			}
		}
	}